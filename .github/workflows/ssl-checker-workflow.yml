name: Test Swift Tools and NTRIP Stream

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test-streaming-job:
    runs-on: ubuntu-latest
    env:
      NTRIP_USERNAME: ${{ secrets.NTRIP_USERNAME }}
      NTRIP_PASSWORD: ${{ secrets.NTRIP_PASSWORD }}
      
      # IMPORTANT: Make sure these two values are still correct!
      SWIFT_TOOLS_URL: "https://github.com/swift-nav/swift-cli/releases/download/v0.20.0/swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz"
      EXPECTED_FILE_SIZE: 44397837Â 

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Swift Tools
        run: |
          echo "### Downloading and installing Swift Tools... ###"
          curl -L -o swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz "${{ env.SWIFT_TOOLS_URL }}"
          
          ACTUAL_SIZE=$(wc -c < swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz)
          if [ "$ACTUAL_SIZE" -ne "${{ env.EXPECTED_FILE_SIZE }}" ]; then
            echo "Error: Downloaded file size is incorrect. Expected ${{ env.EXPECTED_FILE_SIZE }}, got $ACTUAL_SIZE."
            exit 1
          fi
          
# --- 1. THE DOWNLOAD COMMAND (Ensure it's using the right name) ---
curl -L -o swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz "${{ env.SWIFT_TOOLS_URL }}"

# 2. CHECK THE DOWNLOAD STATUS
if [ $? -ne 0 ]; then
  echo "Error: curl download failed with exit code $?."
  exit 1
fi

# 3. VERIFY SIZE AND INTEGRITY
ACTUAL_SIZE=$(wc -c < swift-tools.tar.gz)

# Fix for Bash syntax error (using arithmetic comparison)
if (( ACTUAL_SIZE != ${{ env.EXPECTED_FILE_SIZE }} )); then
  echo "Error: Downloaded file size is incorrect. Expected ${{ env.EXPECTED_FILE_SIZE }}, got $ACTUAL_SIZE."
  # Optional: Display content if size is tiny (suggests an HTML error page)
  if (( ACTUAL_SIZE < 10000 )); then
    echo "--- Head of downloaded file (likely an error page) ---"
    head -n 10 swift-tools.tar.gz
    echo "------------------------------------------------------"
  fi
  exit 1
fi

# 4. TEST DECOMPRESSION (Integrity Check)
if ! gunzip -t swift-tools.tar.gz &> /dev/null; then
  echo "Error: File is corrupted or not a valid gzip format."
  exit 1
fi

echo "Success: File size and format integrity verified."

# --- Proceed to extraction: tar -xf swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz -C $HOME/swift-tools ---

          mkdir -p $HOME/swift-tools
          tar -xf swift-cli-v0.20.0-x86_64-apple-darwin.tar.gz -C $HOME/swift-tools
          
          echo "$HOME/swift-tools" >> $GITHUB_PATH
          echo "Tools are ready."

      - name: Run a 10-second Test Stream with Debugging
        env:
          GITHUB_TOKEN: ${{ secrets.SECRETS_PAT }}
        run: |
          echo "[1/4] Starting debug checks..."
          set -o pipefail

          echo "[2/4] Verifying we can write to the output file..."
          touch log.rtcm.json.test
          if [ $? -ne 0 ]; then
            echo "Error: Could not create the output file. Check directory permissions."
            exit 1
          fi
          echo "Success: Output file 'log.rtcm.json.test' is writeable."
          ls -l log.rtcm.json.test

          echo "[3/4] Verifying the 'rtcm32json' tool is functional..."
          swift rtcm32json --help > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "Error: The 'swift rtcm32json' command failed to respond."
            exit 1
          fi
          echo "Success: 'swift rtcm32json' tool appears to be working."

          echo "[4/4] Attempting to connect, log in, and stream data..."
          # FIX 1: Changed -vv to the correct --verbose flag
          timeout 10s swift ntripping --verbose \
            --username "${{ env.NTRIP_USERNAME }}" \
            --password "${{ env.NTRIP_PASSWORD }}" \
            --url https://eu.l1l2.skylark.swiftnav.com:2102/SSR-integrity \
            --lat 52.149 \
            --lon 13.096 | swift rtcm32json > log.rtcm.json.test
        # FIX 2: Corrected the indentation of this line
        continue-on-error: true

        
          

      - name: Upload Test Log File
        uses: actions/upload-artifact@v4
        with:
          name: ntrip-test-log
          path: log.rtcm.json.test
